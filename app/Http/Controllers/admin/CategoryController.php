<?php

namespace App\Http\Controllers\admin;

use App\Http\Controllers\Controller;
use App\Models\Category;
use Illuminate\Http\Request;

class CategoryController extends Controller
{
    public function categoryIndex()
    {
        $category = Category::whereNull('deleted_at')->get();
        return view('admin.category.category', compact('category'));
    }

    public function categoryCreate()
    {
        return view('admin.category.addcategory');
    }

    public function categoryStore(Request $request)
    {
        $request->validate([
            'name' => 'required|max:255',
        ]);

        Category::create([
            'name' => $request->name,
        ]);

        $category = Category::whereNull('deleted_at')->get(); // L·∫•y l·∫°i danh s√°ch danh m·ª•c sau khi th√™m m·ªõi

        return redirect()->route('category.index')->with('success', 'Th√™m m·ªõi danh m·ª•c th√†nh c√¥ng');
    }

    // üóë X√≥a m·ªÅm danh m·ª•c (C·∫≠p nh·∫≠t deleted_at)
    public function categoryDelete($id)
    {
        $category = Category::find($id);

        if (!$category) {
            return redirect()->route('category.index')->with('error', 'Danh m·ª•c kh√¥ng t·ªìn t·∫°i!');
        }

        $category->delete(); // X√≥a m·ªÅm (C·∫≠p nh·∫≠t deleted_at)

        return redirect()->route('category.index')->with('success', 'Danh m·ª•c ƒë√£ ƒë∆∞·ª£c ƒë∆∞a v√†o th√πng r√°c!');
    }
    // L·∫•y danh s√°ch danh m·ª•c ƒë√£ b·ªã x√≥a m·ªÅm
    public function categoryTrash()
    {
        $categories = Category::onlyTrashed()->get();
        return view('admin.category.trash', compact('categories'));
    }

    // Kh√¥i ph·ª•c danh m·ª•c ƒë√£ x√≥a m·ªÅm
    public function categoryRestore($id)
    {
        $category = Category::onlyTrashed()->find($id);

        if (!$category) {
            return redirect()->route('category.index')->with('error', 'Danh m·ª•c kh√¥ng t·ªìn t·∫°i trong th√πng r√°c');
        }

        $category->restore();

        return redirect()->route('category.index')->with('success', 'Danh m·ª•c ƒë√£ ƒë∆∞·ª£c kh√¥i ph·ª•c!');
    }

    // X√≥a vƒ©nh vi·ªÖn danh m·ª•c
    public function categoryForceDelete($id)
    {
        $category = Category::onlyTrashed()->find($id);

        if (!$category) {
            return redirect()->route('category.index')->with('error', 'Danh m·ª•c kh√¥ng t·ªìn t·∫°i');
        }

        $category->forceDelete(); // X√≥a vƒ©nh vi·ªÖn

        return redirect()->route('category.index')->with('success', 'Danh m·ª•c ƒë√£ b·ªã x√≥a vƒ©nh vi·ªÖn!');
    }



    public function categoryEdit($id)
    {
        $category = Category::find($id);

        if (!$category) {
            return redirect()->route('category.index')->with('error', 'Danh m·ª•c kh√¥ng t·ªìn t·∫°i');
        }

        return view('admin.category.editcategory', compact('category'));
    }

    public function categoryUpdate(Request $request, $id)
    {
        $request->validate([
            'name' => 'required|max:255',
        ]);

        $category = Category::find($id);

        if (!$category) {
            return redirect()->route('category.index')->with('error', 'Danh m·ª•c kh√¥ng t·ªìn t·∫°i');
        }

        $category->update([
            'name' => $request->name,
        ]);

        return redirect()->route('category.index')->with('success', 'C·∫≠p nh·∫≠t danh m·ª•c th√†nh c√¥ng');
    }


}
